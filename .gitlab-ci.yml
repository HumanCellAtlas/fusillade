image: humancellatlas/dss-build-box

variables:
  GIT_SUBMODULE_STRATEGY: normal
  GITHUB_API: "https://api.github.com"
  GIT_DEPTH: "3"

stages:
  - test
  - deploy
  - integration_test
  - release

before_script:
  - export COMMITS_URL=${GITHUB_API}/repos/HumanCellAtlas/fusillade/commits
  - if not [[ CI_COMMIT_SHA == $(http GET $COMMITS_URL sha==$CI_COMMIT_REF_NAME | jq -r '.[0]["sha"]') ]]; then exit  1; fi
  - virtualenv ~/venv
  - source ~/venv/bin/activate
  - pip install -r requirements-dev.txt
  - source environment

.tests:
  stage: test
  except:
    - tags
    - schedules

security_checks:
  extends: .tests
  before_script:
      - virtualenv ~/venv
      - source ~/venv/bin/activate
  script:
    - pip install trufflehog
    - wget -O regex.json https://raw.githubusercontent.com/HumanCellAtlas/dcplib/master/components/trufflehog_regex_patterns.json
    - trufflehog --regex --rules regex.json --entropy=False https://github.com/HumanCellAtlas/fusillade.git
    - rm regex.json

unit_tests:
  extends: .tests
  script:
    - make unittest
  only:
    - master

.deploy:
  stage: deploy
  except:
    - schedules

deploy_branch:
  extends: .deploy
  script:
    - scripts/populate_deployment_environment.py $CI_COMMIT_REF_NAME -p > environment.local
    - make deploy
  only:
    - master
    - integration
    - staging

deploy_name:
  extends: .deploy
  script:
    - scripts/populate_deployment_environment.py testing -p > environment.local
    - make deploy
  only:
    - staging

integration_test:
  stage: integration_test
  script:
    - scripts/populate_deployment_environment.py $CI_COMMIT_REF_NAME -p > environment.local
    - make integration_test
  only:
    - master
    - integration
    - staging
  except:
    - schedules

.release:
  stage: release
  script:
    - ${RELEASE_COMMAND}
  except:
    - schedules
  when: manual
  allow_failure: true

integration_major:
  extends: .release
  script:
    - scripts/promote.py integration --release major
  only:
    - master
  when: manual

integration_minor:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/promote.py integration --release minor
  only:
    - master
  when: manual

integration_patch:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/promote.py integration --release patch
  only:
    - master
  when: manual

integration_build:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/promote.py integration --release build
  only:
    - master
  when: manual

promote_staging:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/promote.py staging
  only:
    - integration
  when: manual

promote_production:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/promote.py production
  only:
    - staging
  when: manual
